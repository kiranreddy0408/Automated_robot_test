name: dev4-6080 Test Suite runner

on:
  pull_request:
    paths-ignore:
      - '**.md'

jobs:
  run_tests1:
    runs-on: ubuntu-latest
    if: ${{ steps.check_comment.outputs.comment_contains_run_tests_1 == 'true' }}
    steps:
        # checkout code from a repository
        - uses: actions/checkout@v3
        # create folder for test reports
        - name: Create folder for reports
          run: mkdir reports
        # run Robot Framework tests inside Docker container
        - name: dev4-9081 Test Suite runner
          # container used here is ppodgorsek/robot-framework:latest
          # it is strongly recommended to use versioned image (ie. not the tag latest like here) to maintain dependencies
          # see container documentation for usage: https://hub.docker.com/r/ppodgorsek/robot-framework/dockerfile
          # it is required that GitHub repository contains folder "reports". Commit some file inside "reports" to create it
          # place tests in folder tests or change docker run command accordingly
          # configure -e ROBOT_OPTIONS according to yout tests, or remove it if no special configuration is needed
          run: |
            docker run \
              -v ${PWD}/reports:/opt/robotframework/reports:Z \
              -v ${PWD}/tests/dev4-9081:/opt/robotframework/tests/dev4-9081:Z \
              -e ROBOT_OPTIONS="--variable DINOSAUR:Achillobator --variable NOT_DINOSAUR:kissa" \
              --user $(id -u):$(id -g) \
              ppodgorsek/robot-framework:latest
        # upload test reports as a zip file
        - name: Upload reports
          uses: actions/upload-artifact@v3
          if: always()
          with:
            name: reports
            # set path to Robot Framework results reports. Exclude dummy file that is needed because of ppodgorsek image priviledges.
            path: ${{ github.workspace }}/reports
  run_tests2:
    runs-on: ubuntu-latest
    if: ${{ steps.check_comment.outputs.comment_contains_run_tests_2 == 'true' }}
    steps:
        # checkout code from a repository
        - uses: actions/checkout@v3
        # create folder for test reports
        - name: Create folder for reports
          run: mkdir reports
        # run Robot Framework tests inside Docker container
        - name: dev5 Test Suite runner
          # container used here is ppodgorsek/robot-framework:latest
          # it is strongly recommended to use versioned image (ie. not the tag latest like here) to maintain dependencies
          # see container documentation for usage: https://hub.docker.com/r/ppodgorsek/robot-framework/dockerfile
          # it is required that GitHub repository contains folder "reports". Commit some file inside "reports" to create it
          # place tests in folder tests or change docker run command accordingly
          # configure -e ROBOT_OPTIONS according to yout tests, or remove it if no special configuration is needed
          run: |
            docker run \
              -v ${PWD}/reports:/opt/robotframework/reports:Z \
              -v ${PWD}/tests/dev5:/opt/robotframework/tests/dev5:Z \
              -e ROBOT_OPTIONS="--variable DINOSAUR:Achillobator --variable NOT_DINOSAUR:kissa" \
              --user $(id -u):$(id -g) \
              ppodgorsek/robot-framework:latest
        # upload test reports as a zip file
        - name: Upload reports
          uses: actions/upload-artifact@v3
          if: always()
          with:
            name: reports
            # set path to Robot Framework results reports. Exclude dummy file that is needed because of ppodgorsek image priviledges.
            path: ${{ github.workspace }}/reports

  run_tests3:
    runs-on: ubuntu-latest
    if: ${{ steps.check_comment.outputs.comment_contains_run_tests_3 == 'true' }}
    steps:
        # checkout code from a repository
        - uses: actions/checkout@v3
        # create folder for test reports
        - name: Create folder for reports
          run: mkdir reports
        # run Robot Framework tests inside Docker container
        - name: dev4-6080 Test Suite runner
          # container used here is ppodgorsek/robot-framework:latest
          # it is strongly recommended to use versioned image (ie. not the tag latest like here) to maintain dependencies
          # see container documentation for usage: https://hub.docker.com/r/ppodgorsek/robot-framework/dockerfile
          # it is required that GitHub repository contains folder "reports". Commit some file inside "reports" to create it
          # place tests in folder tests or change docker run command accordingly
          # configure -e ROBOT_OPTIONS according to yout tests, or remove it if no special configuration is needed
          run: |
            docker run \
              -v ${PWD}/reports:/opt/robotframework/reports:Z \
              -v ${PWD}/tests/dev4-6080:/opt/robotframework/tests/dev4-6080:Z \
              -e ROBOT_OPTIONS="--variable DINOSAUR:Achillobator --variable NOT_DINOSAUR:kissa" \
              --user $(id -u):$(id -g) \
              ppodgorsek/robot-framework:latest
        # upload test reports as a zip file
        - name: Upload reports
          uses: actions/upload-artifact@v3
          if: always()
          with:
            name: reports
            # set path to Robot Framework results reports. Exclude dummy file that is needed because of ppodgorsek image priviledges.
            path: ${{ github.workspace }}/reports
  check_comment:
    runs-on: ubuntu-latest
    steps:
      - name: Get Pull Request Comments
        id: get_comments
        uses: actions/github-script@v4
        with:
          script: |
            const response = await github.rest.pulls.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });
            console.log(JSON.stringify(response.data));
            return response.data;

      - name: Check First Comment
        id: check_comment
        run: |
          comment_contains_run_tests_1=$(echo "${{ steps.get_comments.outputs.result }}" | jq -r '.[0].body | contains("Run Tests 1")')
          comment_contains_run_tests_2=$(echo "${{ steps.get_comments.outputs.result }}" | jq -r '.[0].body | contains("Run Tests 2")')
          comment_contains_run_tests_3=$(echo "${{ steps.get_comments.outputs.result }}" | jq -r '.[0].body | contains("Run Tests 3")')
          echo "::set-output name=comment_contains_run_tests_1::$comment_contains_run_tests_1"
          echo "::set-output name=comment_contains_run_tests_2::$comment_contains_run_tests_2"
          echo "::set-output name=comment_contains_run_tests_3::$comment_contains_run_tests_3"
        shell: bash            
